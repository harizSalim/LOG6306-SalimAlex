buildscript {
    repositories {
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

version = VERSION_NAME
group = GROUP

repositories {
    jcenter()
}

ext.libraries = [
        app_compat: 'com.android.support:appcompat-v7:22.1.1',
        testing: [
                dependencies.create('junit:junit:4.11') {
                    exclude module: 'hamcrest-core'
                },
                'org.robolectric:robolectric:3.0',
                'com.google.guava:guava:18.0',
                'org.hamcrest:hamcrest-integration:1.3',
                'org.hamcrest:hamcrest-core:1.3',
                'org.hamcrest:hamcrest-library:1.3',
                'org.mockito:mockito-core:1.10.19',
                dependencies.create('com.squareup:fest-android:1.0.+') {
                    exclude group: 'com.android.support', module: 'support-v4'
                }
        ]
]

ext.compile = [
        minSdk: 14,
        maxSdk: 22,
        buildToolsVersion: "21.1.2"
]

apply plugin: 'com.android.library'

android {
    compileSdkVersion compile.maxSdk
    buildToolsVersion compile.buildToolsVersion

    defaultConfig {
        minSdkVersion compile.minSdk
        targetSdkVersion compile.maxSdk
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.auth0.android:identity-core:1.10.1'
    compile libraries.app_compat
}

apply plugin: 'com.github.dcendents.android-maven'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    failOnError false
}

afterEvaluate {
    javadoc.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
